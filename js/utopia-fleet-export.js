var module = angular.module("utopia-fleet-export", []);

module.directive( "fleetExport", function() {

	return {

		scope: {
			fleet: "=",
			sets: "=",
			searchOptions: "="
		},

		templateUrl: "fleet-export.html",
		
		link: function(scope,element) {
			
			console.log(element);
			
			$(element).find("textarea").focus(function() {
				$this = $(this);
				
				$this.select();
				
				window.setTimeout(function() {
					$this.select();
				}, 1);
				
				// Work around WebKit's little problem
				$this.mouseup(function() {
					// Prevent further mouseup intervention
					$this.unbind("mouseup");
					return false;
				});
			});
			
		},

		controller: function($scope, $filter) {
			
			$scope.fleetText = "";
			
			var valueOf = $filter("valueOf");
			
			$scope.$watch( "fleet", function(fleet) {
				var fleetText = "";
				
				var totalCost = 0;
				
				$.each( fleet.ships, function(i,ship) {
					
					var res = cardToText(ship,ship,fleet);
					fleetText += res.text + "Ship Cost: " + res.cost + " SP\n\n";
					totalCost += res.cost;
					
				});
				
				if( fleet.resource ) {
					var res = cardToText(fleet.resource,{},fleet);
					fleetText += "Resource: " + res.text + "\n";
					totalCost += res.cost;
				}
				
				fleetText += "Total Cost: " + totalCost + " SP\n\n";
				
				fleetText += "Generated by Utopia\nhttp://comatoes.github.io/staw-utopia/";
				
				$scope.fleetText = fleetText;
				
			}, true );
			
			function getSetName(id) {
				var names = "";
				var sets = id.split(",");
				$.each( sets, function(i,id) {
					names += $scope.sets[id] ? $scope.sets[id].name : id;
					if( i < sets.length-1 )
						names += ", ";
				});
				return names;
			}
			
			function cardToText(card, ship, fleet, indent) {
				
				var text = "";
				indent = indent || 0;
				for( var i = 0; i < indent; i ++ )
					text += "- ";
				
				var cost = valueOf(card,"cost",ship,fleet);
				
				text += card.name;
				
				if( card.type == "captain" )
					text += " " + card.skill + " (Captain)";
				if( card.type == "admiral" )
					text += " (Admiral)";
				if( card.type == "fleet-captain" )
					text += " Fleet Captain";
				if( card.type == "flagship" )
					text += " Flagship";
				if( card.type == "faction" )
					text += " Faction";
				
				if( card.type == "ship" ) {
					text += (card.unique ? "" : " ("+card.class+")" ) + " [" + cost + "]\n";
				} else {
					text += ( card.set ? " (" + getSetName(card.set) + ")" : "" ) + " [" + cost + "]\n";
				}

				if( card.resource ) {
					var res = cardToText(card.resource, ship, fleet, indent+1);
					text += res.text;
					cost += res.cost;
				}
				
				if( card.captain ) {
					var res = cardToText(card.captain, ship, fleet, indent+1);
					text += res.text;
					cost += res.cost;
				}
				
				if( card.admiral ) {
					var res = cardToText(card.admiral, ship, fleet, indent+1);
					text += res.text;
					cost += res.cost;
				}
				
				$.each( card.upgrades || [], function(i,slot) {
					if( slot.occupant ) {
						var res = cardToText(slot.occupant, ship, fleet, indent+1);
						text += res.text;
						cost += res.cost;
					}
				});
				
				$.each( card.upgradeSlots || [], function(i,slot) {
					if( slot.occupant ) {
						var res = cardToText(slot.occupant, ship, fleet, indent+1);
						text += res.text;
						cost += res.cost;
					}
				});
				
				return { cost: cost, text: text };
			}

		}

	};

} );